// Copyright (c) 2017-2018, NVIDIA CORPORATION. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


#include "dali/operators/reader/mxnet_reader_op.h"

namespace dali {

DALI_REGISTER_OPERATOR(MXNetReader, MXNetReader, CPU);

DALI_SCHEMA(MXNetReader)
  .DocStr("Read sample data from a MXNet RecordIO.")
  .NumInput(0)
  .NumOutput(2)
  .AddArg("path",
      R"code(List of paths to RecordIO files.)code",
      DALI_STRING_VEC)
  .AddArg("index_path",
      R"code(List (of length 1) containing a path to index (.idx) file.
It is generated by the MXNet's `im2rec.py` script
together with RecordIO file. It can also be
generated using `rec2idx` script distributed with DALI.)code",
      DALI_STRING_VEC)
  .AddOptionalArg("read_detection_data",
      R"code(If true, MXNetReader will threat label data as bboxes and lables from the COCO
detection format.)code",
      false)
  .AddOptionalArg("ratio",
      R"code(If true, bboxes returned values as expressed as ratio w.r.t. to the image width and height.)code",
      false)
  .AddOptionalArg("ltrb",
      R"code(If true, bboxes are returned as [left, top, right, bottom], else [x, y, width, height].)code",
      false)
  .AddOptionalArg("save_img_ids",
      R"code(If true, image IDs will also be returned.)code",
      false)
  .AddOptionalArg("size_threshold",
      R"code(If width or height of a bounding box representing an instance of an object is under this value,
object will be skipped during reading. It is represented as absolute value.)code",
      0.1f,
      false)
  .AdditionalOutputsFn([](const OpSpec& spec) {
    return static_cast<int>(spec.GetArgument<bool>("save_img_ids")) +
           // lables are read anyway, so we need to account for bboxes only
           + static_cast<int>(spec.GetArgument<bool>("read_detection_data"));
  })
  .AddParent("LoaderBase");

}  // namespace dali
